#!/usr/local/bin/bash
PATH=${PATH}:/sbin:/usr/bin:/usr/local/bin

# FAIL
# Oct  7 23:41:47 kong /etc/dpinger/failover[61064]: /etc/dpinger/failover
# Oct  7 23:41:47 kong /etc/dpinger/failover[61065]: 1 igb0
# Oct  7 23:41:47 kong /etc/dpinger/failover[61066]: 2 24.13.224.1
# Oct  7 23:41:47 kong /etc/dpinger/failover[61067]: 3 1
# Oct  7 23:41:48 kong /etc/dpinger/failover[61068]: 4 10288
# Oct  7 23:41:48 kong /etc/dpinger/failover[61069]: 5 1644
# SUCCEED
# Oct  7 23:42:21 kong /etc/dpinger/failover[62252]: /etc/dpinger/failover
# Oct  7 23:42:21 kong /etc/dpinger/failover[62253]: 1 igb0
# Oct  7 23:42:21 kong /etc/dpinger/failover[62254]: 2 24.13.224.1
# Oct  7 23:42:21 kong /etc/dpinger/failover[62255]: 3 0
# Oct  7 23:42:21 kong /etc/dpinger/failover[62256]: 4 10034
# Oct  7 23:42:21 kong /etc/dpinger/failover[62257]: 5 2391

BLINK="/usr/local/bin/blink1-tool"
LOGGER="/usr/bin/logger -si -p user.notice -t ${0}"
PRIMARY_NIC="${1}"
BACKUP_NIC="${2}"
LAN_NIC="${3}"
TEST_DESTINATION="${4}"
STATUS="${5}"
LATENCY_AVG="${6}"
LOSS_AVG="${7}"

# NIC STATE INFO
PRIMARY_NIC_GATEWAY="$(cat /tmp/${PRIMARY_NIC}_router)"
BACKUP_NIC_GATEWAY="$(cat /tmp/${BACKUP_NIC}_router)"
START_DEFAULT_ROUTE="$(netstat -rn | grep default | sed 's/ \{1,\}/ /g')"

# PF Ruleset
PF_RULE_FILE="/etc/pf/pf.simple.conf"
# Hosts to prevent from egress when failed over
IPS_TO_BLOCK_FROM_EGRESS="192.168.1.6"
DAEMONS_TO_RESTART_ON_FW_CHANGE="unbound netdata smokeping miniupnpd avahi-daemon"

function failover() {
    PRI_NIC="${1}"
    BAC_NIC="${2}"
    EGRESS_GATEWAY="$(cat /tmp/${PRI_NIC}_router)"
    OPERATION="${3}"
    
    # Delete the default route

    ${LOGGER} "Removing the current default route: ${START_DEFAULT_ROUTE}"
    route delete default | ${LOGGER}

    ${LOGGER} "Removing ${BAC_NIC} from the egress NIC group"
    ifconfig ${BAC_NIC} -group egress | ${LOGGER}
    
    # Add A route to the new 
    ${LOGGER} "Adding default route via ${EGRESS_GATEWAY}"
    route add default ${EGRESS_GATEWAY} | ${LOGGER}

    ${LOGGER} "Addping ${PRI_NIC} from the egress NIC group"
    ifconfig ${PRI_NIC} group egress | ${LOGGER}
    
    # Reset Firewall
    ${LOGGER} "Resetting PF to egress via ${EGRESS_NIC}"
    pfctl -g -v -F all -f ${PF_RULE_FILE}

    ${LOGGER} "Updating LED to give visual notification"
    ${BLINK} --rgb=${COLOR}

    # Restart any daemons that home to a single egress
    for DAEMON in ${DAEMONS_TO_RESTART_ON_FW_CHANGE}; do
        ${LOGGER} "Restarting ${DAEMON}"
        service ${DAEMON} stop
        if [[ "${DAEMON}" == "unbound" ]]; then
            ${LOGGER} "Removing /etc/unbound/root.key"
            rm -v /etc/unbound/root.key
        fi
        ${LOGGER} "Killing any ${DAEMON} stragglers"
        pkill -9 ${DAEMON}
        sleep 1
        service ${DAEMON} start
    done

    # Update route53
    ${LOGGER} "Updating Route53"
    sudo -u charles ~charles/bin/update-route53.sh .

    # Update first hop host entry:
    ${LOGGER} "Updating FirstHop DNS entry"
    /usr/local/bin/first_hop_entry.sh & 

    # Send Pushover notification
    ${LOGGER} "Sending pushover notification"
    echo "${OPERATION} to ${EGRESS_NIC} - $(cat /var/db/${PRI_NIC}_ip) - $(date)" | /usr/local/bin/pushover_notify.sh &

    # Make *SURE* the LED is set correctly
    ${LOGGER} "Updating LED to give visual notification again"
    ${BLINK} --rgb=${COLOR}
}

# Evaluate the failure sate
if [[ "${STATUS}" == "1" ]] ; then
    COLOR="ea0a8e"
    LOGGER="${LOGGER} FAILOVER: "
    ${LOGGER} "Executing falover from ${PRIMARY_NIC} to ${BACKUP_NIC}"
    failover ${BACKUP_NIC} ${PRIMARY_NIC} Failover
    for IP in ${IPS_TO_BLOCK_FROM_EGRESS}; do
        ${LOGGER} "Blocking access for the following hosts to conserve bandwidth: ${IPS_TO_BLOCK_FROM_EGRESS}"
        pfctl -t nat_approved_wide -T add \!${IP} | ${LOGGER}
    done 

elif [[ "${STATUS}" == "0" ]]; then
    COLOR="000000"
    LOGGER="${LOGGER} - RECOVER: "
    ${LOGGER} "Executing return to ${PRIMARY_NIC} from ${BACKUP_NIC}"
    failover ${PRIMARY_NIC} ${BACKUP_NIC} Recover
else 
    ${LOGGER} "UNKNOWN ALARM ${STATUS}, exit 1"
    exit 1
fi

${LOGGER} "Completed"


